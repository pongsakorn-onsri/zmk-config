/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&lt 2 TAB  &kp Q  &kp W  &kp E             &kp R             &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&mo 1      &kp A  &kp S  &kp D             &kp F             &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C             &kp V             &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LEFT_CONTROL  &kp LEFT_COMMAND  &kp SPACE    &kp RET  &mo 3  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp EXCLAMATION  &kp AT_SIGN   &kp HASH           &kp DOLLAR       &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp ASTERISK    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0     &bt BT_SEL 1  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_MUTE     &kp LEFT   &kp DOWN       &kp UP          &kp RIGHT             &kp LEFT_BRACKET       &kp GRAVE
&kp LSHFT   &trans           &trans        &kp C_PREV         &kp C_NEXT       &kp C_PP       &kp MINUS  &kp EQUAL      &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp BACKSLASH          &trans
                                           &trans             &trans           &trans         &trans     &trans         &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3       &kp NUMBER_4     &kp N5        &kp NUMBER_6  &kp N7     &kp N8    &kp N9    &kp N0    &kp BSPC
&kp LCTRL  &trans        &trans        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_MUTE    &kp MINUS     &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH  &trans
&kp LSHFT  &trans        &trans        &kp C_PREV         &kp C_NEXT       &kp C_PP      &trans        &trans     &trans    &trans    &trans    &trans
                                       &trans             &trans           &trans        &trans        &trans     &trans
            >;
        };

        top_layer {
            bindings = <
&trans          &kp C_BRI_DN  &kp C_BRI_UP  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_MUTE    &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS      &trans        &kp DELETE
&kp LCTRL       &trans        &trans        &trans             &trans           &trans        &kp KP_N4        &kp KP_N5        &kp KP_NUMBER_6  &kp KP_MINUS     &trans        &kp GRAVE
&kp LEFT_SHIFT  &out OUT_BLE  &bt BT_SEL 2  &bt BT_SEL 1       &bt BT_SEL 0     &bt BT_CLR    &kp KP_N1        &kp KP_N2        &kp KP_N3        &kp KP_MULTIPLY  &kp KP_SLASH  &trans
                                            &trans             &trans           &trans        &kp KP_NUMBER_0  &trans           &kp KP_DOT
            >;
        };
    };
};
